[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[[source]]
url = "https://testpypi.org/simple"
verify_ssl = true
name = "testpypi"

[packages]
psutil = ">=5.9.5"
cryptography = ">=44.0.0"

#
# Optional production cloud specific packages.
# Install using:  pipenv install [package] --catgeories "cloud_logger cloud_secret"
#

[cloud_logger]
#infisical = ">=1.2"
#google-cloud-logging = ">=3.5"
#boto3 = ">=1.26"
oci = ">=2.104"

[cloud_secret]
#google-cloud-secret-manager = ">=2.16"
#boto3 = ">=1.26"
oci = ">=2.104"
# Developement tools.
# Install using:  pipenv install [package] --dev

[dev-packages]                  # As of 2023-09-04.
#cachetools = ">=5.3.0"         # McCache is build from this library.
pre-commit = ">=3.4.0"          # Git pre-commit hook.
podman-compose = ">=1.0.6"      # Use podman to launch 'docker-compose.yml' file.
bandit = ">=1.7.5"              # Security issues scanner.
#pyupgrade = ">=3.10.1"         # Upgrade to modern Python syntax.
#darglint = ">=1.8.1"           # Docstring linter expect docstring formatted suing Google Python Style Guide.
mypy = ">=1.5.1"                # Static type checker for Python.
ruff = ">=0.0.287"              # Extremely fast Python linter.  Use this as the default.
vulture = ">=2.9.1"             # Dead code scanner.
faker = ">=25.0.1"              # Test data faker.
pytest = ">=7.4.3"              # Unit testing framework.
pytest-bdd = ">=7.0.1"          # Subset of Gherkin language for Behavioral Driven Development.
pytest-docker = ">=2.0.1"       # Docker based image testing.
py-spy = ">=0.3.14"             # Sampling profiler for Python programs.
twine = ">=6.0.1"               # Package uploader for PyPI/TestPyPi.
coverage = ">=7.3.1"            # Measure code coverage.
hatch = ">=1.13"                # The build tool.

[requires]
python_version = ">=3.12.5"     # McCache uses Structured Pattern Matching.

[scripts]
helloworld = "python -c \"print('Hello World. Ran from: pipenv run helloworld')\""
covertest  = "coverage run -m pytest -v  tests\\unit\\test_cache.py"
unittest   = "tests/run_tests"
minitest   = "tests/run_tests  -R 1  -L 0 -C 9 -K 100 -A 0.01  -R 1  -T 4"
loadtest   = "tests/run_tests  -R 10 -L 0 -C 9 -K 100 -A 0.001 -R 10 -T 4 -s 1048576"
appendtest = "for ((i=1;i<=10000;i++)); do echo \"$(hostname) $(date '+%T %N')\" >> ${MCCACHE_DEBUG_FILE}; done"

